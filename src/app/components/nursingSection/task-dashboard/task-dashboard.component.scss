// task-dashboard.component.scss

// task-dashboard.component.scss

/* Import the map module (needed for map.get) */
@use "sass:map";

/* Variables */
$priority-colors: (
  Low: #28a745,
  Medium: #ffc107,
  High: #fd7e14,
  Critical: #dc3545,
);

$status-colors: (
  NotStarted: #6c757d,
  InProgress: #17a2b8,
  Completed: #28a745,
  Overdue: #dc3545,
);

/* Base Styles */
.task-dashboard {
  padding: 1.5rem 0;

  h1 {
    font-weight: 600;
    color: var(--bs-primary);
    margin-bottom: 0;
  }

  .table-responsive {
    border-radius: 0.5rem;
    overflow: hidden;
    box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
  }

  /* Table Styles */
  .table {
    margin-bottom: 0;

    thead {
      background-color: var(--bs-primary);
      color: white;

      th {
        padding: 1rem;
        font-weight: 500;
        vertical-align: middle;
      }
    }

    tbody tr {
      transition: background-color 0.2s ease;

      &:hover {
        background-color: rgba(var(--bs-primary-rgb), 0.05);
      }

      td {
        padding: 1rem;
        vertical-align: middle;
      }
    }
  }

  /* Badge Styles */
  .badge {
    padding: 0.35em 0.65em;
    font-weight: 500;
    text-transform: capitalize;

    &.priority-Low {
      background-color: map.get($priority-colors, Low);
      color: white;
    }

    &.priority-Medium {
      background-color: map.get($priority-colors, Medium);
      color: #212529;
    }

    &.priority-High {
      background-color: map.get($priority-colors, High);
      color: white;
    }

    &.priority-Critical {
      background-color: map.get($priority-colors, Critical);
      color: white;
    }

    &.status-NotStarted {
      color: map.get($status-colors, NotStarted);
      background-color: rgba(map.get($status-colors, NotStarted), 0.1);
    }

    &.status-InProgress {
      color: map.get($status-colors, InProgress);
      background-color: rgba(map.get($status-colors, InProgress), 0.1);
    }

    &.status-Completed {
      color: map.get($status-colors, Completed);
      background-color: rgba(map.get($status-colors, Completed), 0.1);
    }

    &.status-Overdue {
      color: map.get($status-colors, Overdue);
      background-color: rgba(map.get($status-colors, Overdue), 0.1);
    }
  }

  /* ... rest of your SCSS remains the same ... */

  /* Variables */
  $priority-colors: (
    Low: #28a745,
    Medium: #ffc107,
    High: #fd7e14,
    Critical: #dc3545,
  );

  $status-colors: (
    NotStarted: #6c757d,
    InProgress: #17a2b8,
    Completed: #28a745,
    Overdue: #dc3545,
  );

  /* Base Styles */
  .task-dashboard {
    padding: 1.5rem 0;

    h1 {
      font-weight: 600;
      color: var(--bs-primary);
      margin-bottom: 0;
    }

    .table-responsive {
      border-radius: 0.5rem;
      overflow: hidden;
      box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
    }

    /* Table Styles */
    .table {
      margin-bottom: 0;

      thead {
        background-color: var(--bs-primary);
        color: white;

        th {
          padding: 1rem;
          font-weight: 500;
          vertical-align: middle;
        }
      }

      tbody tr {
        transition: background-color 0.2s ease;

        &:hover {
          background-color: rgba(var(--bs-primary-rgb), 0.05);
        }

        td {
          padding: 1rem;
          vertical-align: middle;
        }
      }
    }

    /* Badge Styles */
    .badge {
      padding: 0.35em 0.65em;
      font-weight: 500;
      text-transform: capitalize;

      &.priority-Low {
        background-color: map.get($priority-colors, Low);
        color: white;
      }

      &.priority-Medium {
        background-color: map.get($priority-colors, Medium);
        color: #212529;
      }

      &.priority-High {
        background-color: map.get($priority-colors, High);
        color: white;
      }

      &.priority-Critical {
        background-color: map.get($priority-colors, Critical);
        color: white;
      }

      &.status-NotStarted {
        color: map.get($status-colors, NotStarted);
        background-color: rgba(map.get($status-colors, NotStarted), 0.1);
      }

      &.status-InProgress {
        color: map.get($status-colors, InProgress);
        background-color: rgba(map.get($status-colors, InProgress), 0.1);
      }

      &.status-Completed {
        color: map.get($status-colors, Completed);
        background-color: rgba(map.get($status-colors, Completed), 0.1);
      }

      &.status-Overdue {
        color: map.get($status-colors, Overdue);
        background-color: rgba(map.get($status-colors, Overdue), 0.1);
      }
    }

    /* Filter Section */
    .filters-section {
      background-color: #f8f9fa;
      padding: 1.5rem;
      border-radius: 0.5rem;
      margin-bottom: 1.5rem;

      .form-group {
        margin-bottom: 0;

        label {
          font-weight: 500;
          margin-bottom: 0.5rem;
          color: #495057;
        }
      }
    }

    /* Empty State */
    .empty-state {
      padding: 3rem;
      background-color: #f8f9fa;
      border-radius: 0.5rem;

      i {
        opacity: 0.5;
      }

      h5 {
        margin-top: 1rem;
        color: var(--bs-primary);
      }
    }

    /* Modal Styles */
    .modal {
      .modal-header {
        background-color: var(--bs-primary);
        color: white;

        .btn-close {
          filter: invert(1);
        }
      }

      .modal-body {
        padding: 1.5rem;

        .form-label {
          font-weight: 500;
        }
      }
    }

    /* Button Styles */
    .btn {
      i {
        margin-right: 0.5rem;
      }

      &-outline-primary {
        &:hover {
          i {
            color: white;
          }
        }
      }
    }

    /* Responsive Adjustments */
    @media (max-width: 768px) {
      .filters-section {
        .col-md-3 {
          margin-bottom: 1rem;
        }
      }

      .table {
        font-size: 0.875rem;

        thead {
          display: none;
        }

        tbody tr {
          display: block;
          margin-bottom: 1rem;
          border: 1px solid #dee2e6;
          border-radius: 0.25rem;

          td {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0.75rem;

            &::before {
              content: attr(data-label);
              font-weight: 600;
              margin-right: 1rem;
              color: #495057;
            }

            &:first-child {
              border-top-left-radius: 0.25rem;
              border-top-right-radius: 0.25rem;
            }

            &:last-child {
              border-bottom-left-radius: 0.25rem;
              border-bottom-right-radius: 0.25rem;
            }
          }
        }
      }
    }
  }

  /* Utility Classes */
  .text-ellipsis {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  /* Animation for status changes */
  @keyframes pulse {
    0% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.05);
    }
    100% {
      transform: scale(1);
    }
  }

  .status-updated {
    animation: pulse 0.5s ease;
  }
}
